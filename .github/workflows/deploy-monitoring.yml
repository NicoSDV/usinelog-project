name: Provisionnement et dÃ©ploiement des Stack via Ansible

on:
  workflow_dispatch:

jobs:
  deploy:
    name: SSH & Run Ansible Playbook
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: Run Terraform 
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} '
          cd /home/azureuser/terraform
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve
          '
          
      - name: Remove old SSH key from known_hosts
        run: |
          ssh-keygen -R ${{ secrets.VM_HOST }} || true

      - name: Add current SSH host key to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts

      - name: Copy SSH public key to remote authorized_keys
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} \
            "mkdir -p ~/.ssh && chmod 700 ~/.ssh && echo '${{ secrets.SSH_PUBLIC_KEY }}' >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"
            
      - name: Deploy Ansible Playbook on Remote Host
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} '
            cd /home/azureuser/ansible/application
            sudo ansible-playbook -i ../inventory deploy_application.yml
          '
      - name: Deploy Ansible Playbook on Remote Host
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} '
            cd /home/azureuser/ansible/monitoring
            sudo ansible-playbook -i ../inventory deploystack.yml
          '
