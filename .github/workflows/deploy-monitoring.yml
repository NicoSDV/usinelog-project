name: Provisionnement et déploiement des Stack via Ansible

on:
  workflow_dispatch:

jobs:
  deploy:
    name: SSH & Run Ansible Playbook
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add known hosts for target VMs
        run: |
          ssh-keyscan -H $VM_HOST_MONITORING >> ~/.ssh/known_hosts
          ssh-keyscan -H $VM_HOST_APPLICATION >> ~/.ssh/known_hosts

      - name: Run Terraform 
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} '
          cd /home/azureuser/terraform
          terraform init
          terraform plan -out=tfplan
          terraform apply -auto-approve
          '
          
      - name: Push Ansible SSH public key on monitoring VM
        run: |
          ssh -i ~/.ssh/bootstrap_id_rsa -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST_MONITORING }} \
            "mkdir -p ~/.ssh && chmod 700 ~/.ssh && echo '${{ secrets.SSH_PUBLIC_KEY }}' >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"

      - name: Push Ansible SSH public key on application VM
        run: |
          ssh -i ~/.ssh/bootstrap_id_rsa -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST_APPLICATION }} \
            "mkdir -p ~/.ssh && chmod 700 ~/.ssh && echo '${{ secrets.SSH_PUBLIC_KEY }}' >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"

      - name: Injecter la clé SSH sur VM monitoring
        run: |
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_HOST_MONITORING "
            mkdir -p ~/.ssh &&
            echo '${SSH_PUBLIC_KEY}' >> ~/.ssh/authorized_keys &&
            chmod 700 ~/.ssh &&
            chmod 600 ~/.ssh/authorized_keys
          "

      - name: Injecter la clé SSH sur VM application
        run: |
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_HOST_APPLICATION "
            mkdir -p ~/.ssh &&
            echo '${SSH_PUBLIC_KEY}' >> ~/.ssh/authorized_keys &&
            chmod 700 ~/.ssh &&
            chmod 600 ~/.ssh/authorized_keys
          "
            
      - name: Deploy Ansible Playbook on Remote Host
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} '
            cd /home/azureuser/ansible/application
            sudo ansible-playbook -i ../inventory deploy_application.yml
          '
      - name: Deploy Ansible Playbook on Remote Host
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} '
            cd /home/azureuser/ansible/monitoring
            sudo ansible-playbook -i ../inventory deploystack.yml
          '
