name: Provisionnement et dÃ©ploiement des Stack via Ansible

on:
  workflow_dispatch:

jobs:
  deploy:
    name: SSH & Run Ansible Playbook
    runs-on: ubuntu-latest

    env:
      VM_MONITORING: ${{ secrets.VM_MONITORING }}
      VM_APPLICATION: ${{ secrets.VM_APPLICATION }}
      VM_USER: ${{ secrets.VM_USER }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add known hosts for target VMs
        run: |
          export VM_MONITORING=${{ secrets.VM_MONITORING }}
          export VM_APPLICATION=${{ secrets.VM_APPLICATION }}
          ssh-keyscan -H "$VM_MONITORING" >> ~/.ssh/known_hosts
          ssh-keyscan -H "$VM_APPLICATION" >> ~/.ssh/known_hosts


      - name: Run Terraform
        run: |
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_MONITORING '
            cd /home/azureuser/terraform
            terraform init
            terraform plan -out=tfplan
            terraform apply -auto-approve
          '

      - name: Push Ansible SSH public key on monitoring VM
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $VM_USER@$VM_MONITORING \
            "mkdir -p ~/.ssh && chmod 700 ~/.ssh && echo '$SSH_PUBLIC_KEY' >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"

      - name: Push Ansible SSH public key on application VM
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $VM_USER@$VM_APPLICATION \
            "mkdir -p ~/.ssh && chmod 700 ~/.ssh && echo '$SSH_PUBLIC_KEY' >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys"

      - name: Deploy Ansible Playbook on application VM
        run: |
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_APPLICATION '
            cd /home/azureuser/ansible/application
            sudo ansible-playbook -i ../inventory deploy_application.yml
          '

      - name: Deploy Ansible Playbook on monitoring VM
        run: |
          ssh -o StrictHostKeyChecking=no $VM_USER@$VM_MONITORING '
            cd /home/azureuser/ansible/monitoring
            sudo ansible-playbook -i ../inventory deploystack.yml
          '
